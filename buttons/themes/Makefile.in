# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
subdir = buttons/themes
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/as-ac-expand.m4 \
	$(top_srcdir)/m4/intltool.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
SOURCES =
DIST_SOURCES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(WoWdir)" "$(DESTDIR)$(ambiancedir)" \
	"$(DESTDIR)$(ambiance_maverickdir)" \
	"$(DESTDIR)$(ambiance_x_studiodir)" "$(DESTDIR)$(antiquedir)" \
	"$(DESTDIR)$(blazedir)" "$(DESTDIR)$(blaze_colordir)" \
	"$(DESTDIR)$(blubuntudir)" "$(DESTDIR)$(defaultdir)" \
	"$(DESTDIR)$(dustdir)" "$(DESTDIR)$(dust_invertdir)" \
	"$(DESTDIR)$(dust_sanddir)" "$(DESTDIR)$(elementarydir)" \
	"$(DESTDIR)$(equinox_glassdir)" "$(DESTDIR)$(humandir)" \
	"$(DESTDIR)$(human_thindir)" "$(DESTDIR)$(new_hopedir)" \
	"$(DESTDIR)$(planodir)" "$(DESTDIR)$(radiancedir)" \
	"$(DESTDIR)$(radiance_maverickdir)" "$(DESTDIR)$(sorbetdir)"
DATA = $(WoW_DATA) $(ambiance_DATA) $(ambiance_maverick_DATA) \
	$(ambiance_x_studio_DATA) $(antique_DATA) $(blaze_DATA) \
	$(blaze_color_DATA) $(blubuntu_DATA) $(default_DATA) \
	$(dust_DATA) $(dust_invert_DATA) $(dust_sand_DATA) \
	$(elementary_DATA) $(equinox_glass_DATA) $(human_DATA) \
	$(human_thin_DATA) $(new_hope_DATA) $(plano_DATA) \
	$(radiance_DATA) $(radiance_maverick_DATA) $(sorbet_DATA)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALL_LINGUAS = @ALL_LINGUAS@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CATALOGS = @CATALOGS@
CATOBJEXT = @CATOBJEXT@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DATADIR = @DATADIR@
DATADIRNAME = @DATADIRNAME@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GCONFTOOL = @GCONFTOOL@
GCONF_SCHEMA_CONFIG_SOURCE = @GCONF_SCHEMA_CONFIG_SOURCE@
GCONF_SCHEMA_FILE_DIR = @GCONF_SCHEMA_FILE_DIR@
GETTEXT_PACKAGE = @GETTEXT_PACKAGE@
GMOFILES = @GMOFILES@
GMSGFMT = @GMSGFMT@
GNOMELOCALEDIR = @GNOMELOCALEDIR@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INSTOBJEXT = @INSTOBJEXT@
INTLLIBS = @INTLLIBS@
INTLTOOL_EXTRACT = @INTLTOOL_EXTRACT@
INTLTOOL_MERGE = @INTLTOOL_MERGE@
INTLTOOL_PERL = @INTLTOOL_PERL@
INTLTOOL_UPDATE = @INTLTOOL_UPDATE@
LDFLAGS = @LDFLAGS@
LIBEXECDIR = @LIBEXECDIR@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MKINSTALLDIRS = @MKINSTALLDIRS@
MSGFMT = @MSGFMT@
MSGFMT_OPTS = @MSGFMT_OPTS@
MSGMERGE = @MSGMERGE@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
POFILES = @POFILES@
POSUB = @POSUB@
PO_IN_DATADIR_FALSE = @PO_IN_DATADIR_FALSE@
PO_IN_DATADIR_TRUE = @PO_IN_DATADIR_TRUE@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
WINDOWBUTTONS_CFLAGS = @WINDOWBUTTONS_CFLAGS@
WINDOWBUTTONS_LIBS = @WINDOWBUTTONS_LIBS@
WINDOWTITLE_CFLAGS = @WINDOWTITLE_CFLAGS@
WINDOWTITLE_LIBS = @WINDOWTITLE_LIBS@
XGETTEXT = @XGETTEXT@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
EXTRA_DIST = \
	$(default_DATA) \
	$(themes_DATA) \
	$(default_DATA) \
	$(dust_DATA) \
	$(human_DATA) \
	$(human_thin_DATA) \
	$(dust_sand_DATA) \
	$(blaze_DATA) \
	$(blaze_color_DATA) \
	$(antique_DATA) \
	$(ambiance_DATA) \
	$(dust_invert_DATA) \
	$(elementary_DATA) \
	$(radiance_DATA) \
	$(WoW_DATA) \
	$(ambiance_x_studio_DATA) \
	$(sorbet_DATA) \
	$(ambiance_maverick_DATA) \
	$(radiance_maverick_DATA) \
	$(equinox_glass_DATA) \
	$(plano_DATA) \
	$(new_hope_DATA) \
	$(blubuntu_DATA)

default_DATA = default/*.png
defaultdir = $(datadir)/pixmaps/windowbuttons/themes/default
dust_DATA = dust/*.png
dustdir = $(datadir)/pixmaps/windowbuttons/themes/dust
human_DATA = human/*.png
humandir = $(datadir)/pixmaps/windowbuttons/themes/human
human_thin_DATA = human-thin/*.png
human_thindir = $(datadir)/pixmaps/windowbuttons/themes/human-thin
dust_sand_DATA = dust-sand/*.png
dust_sanddir = $(datadir)/pixmaps/windowbuttons/themes/dust-sand
blaze_DATA = blaze/*.png
blazedir = $(datadir)/pixmaps/windowbuttons/themes/blaze
blaze_color_DATA = blaze-color/*.png
blaze_colordir = $(datadir)/pixmaps/windowbuttons/themes/blaze-color
antique_DATA = antique/*.png
antiquedir = $(datadir)/pixmaps/windowbuttons/themes/antique
ambiance_DATA = ambiance/*.png
ambiancedir = $(datadir)/pixmaps/windowbuttons/themes/ambiance
dust_invert_DATA = dust-invert/*.png
dust_invertdir = $(datadir)/pixmaps/windowbuttons/themes/dust-invert
elementary_DATA = elementary/*.png \
	elementary/README

elementarydir = $(datadir)/pixmaps/windowbuttons/themes/elementary
radiance_DATA = radiance/*.png
radiancedir = $(datadir)/pixmaps/windowbuttons/themes/radiance
WoW_DATA = WoW/*.png
WoWdir = $(datadir)/pixmaps/windowbuttons/themes/WoW
ambiance_x_studio_DATA = ambiance-x-studio/*.png
ambiance_x_studiodir = $(datadir)/pixmaps/windowbuttons/themes/ambiance-x-studio
sorbet_DATA = sorbet/*.png
sorbetdir = $(datadir)/pixmaps/windowbuttons/themes/sorbet
ambiance_maverick_DATA = ambiance-maverick/*.png
ambiance_maverickdir = $(datadir)/pixmaps/windowbuttons/themes/ambiance-maverick
radiance_maverick_DATA = radiance-maverick/*.png
radiance_maverickdir = $(datadir)/pixmaps/windowbuttons/themes/radiance-maverick
equinox_glass_DATA = equinox-glass/*.png \
	equinox-glass/README

equinox_glassdir = $(datadir)/pixmaps/windowbuttons/themes/equinox-glass
plano_DATA = plano/*.png
planodir = $(datadir)/pixmaps/windowbuttons/themes/plano
new_hope_DATA = new-hope/*.png
new_hopedir = $(datadir)/pixmaps/windowbuttons/themes/new-hope
blubuntu_DATA = blubuntu/*.png
blubuntudir = $(datadir)/pixmaps/windowbuttons/themes/blubuntu
all: all-am

.SUFFIXES:
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu buttons/themes/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu buttons/themes/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-WoWDATA: $(WoW_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(WoWdir)" || $(MKDIR_P) "$(DESTDIR)$(WoWdir)"
	@list='$(WoW_DATA)'; test -n "$(WoWdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(WoWdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(WoWdir)" || exit $$?; \
	done

uninstall-WoWDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(WoW_DATA)'; test -n "$(WoWdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(WoWdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(WoWdir)" && rm -f $$files
install-ambianceDATA: $(ambiance_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(ambiancedir)" || $(MKDIR_P) "$(DESTDIR)$(ambiancedir)"
	@list='$(ambiance_DATA)'; test -n "$(ambiancedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(ambiancedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(ambiancedir)" || exit $$?; \
	done

uninstall-ambianceDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(ambiance_DATA)'; test -n "$(ambiancedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(ambiancedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(ambiancedir)" && rm -f $$files
install-ambiance_maverickDATA: $(ambiance_maverick_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(ambiance_maverickdir)" || $(MKDIR_P) "$(DESTDIR)$(ambiance_maverickdir)"
	@list='$(ambiance_maverick_DATA)'; test -n "$(ambiance_maverickdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(ambiance_maverickdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(ambiance_maverickdir)" || exit $$?; \
	done

uninstall-ambiance_maverickDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(ambiance_maverick_DATA)'; test -n "$(ambiance_maverickdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(ambiance_maverickdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(ambiance_maverickdir)" && rm -f $$files
install-ambiance_x_studioDATA: $(ambiance_x_studio_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(ambiance_x_studiodir)" || $(MKDIR_P) "$(DESTDIR)$(ambiance_x_studiodir)"
	@list='$(ambiance_x_studio_DATA)'; test -n "$(ambiance_x_studiodir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(ambiance_x_studiodir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(ambiance_x_studiodir)" || exit $$?; \
	done

uninstall-ambiance_x_studioDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(ambiance_x_studio_DATA)'; test -n "$(ambiance_x_studiodir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(ambiance_x_studiodir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(ambiance_x_studiodir)" && rm -f $$files
install-antiqueDATA: $(antique_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(antiquedir)" || $(MKDIR_P) "$(DESTDIR)$(antiquedir)"
	@list='$(antique_DATA)'; test -n "$(antiquedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(antiquedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(antiquedir)" || exit $$?; \
	done

uninstall-antiqueDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(antique_DATA)'; test -n "$(antiquedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(antiquedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(antiquedir)" && rm -f $$files
install-blazeDATA: $(blaze_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(blazedir)" || $(MKDIR_P) "$(DESTDIR)$(blazedir)"
	@list='$(blaze_DATA)'; test -n "$(blazedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(blazedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(blazedir)" || exit $$?; \
	done

uninstall-blazeDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(blaze_DATA)'; test -n "$(blazedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(blazedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(blazedir)" && rm -f $$files
install-blaze_colorDATA: $(blaze_color_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(blaze_colordir)" || $(MKDIR_P) "$(DESTDIR)$(blaze_colordir)"
	@list='$(blaze_color_DATA)'; test -n "$(blaze_colordir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(blaze_colordir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(blaze_colordir)" || exit $$?; \
	done

uninstall-blaze_colorDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(blaze_color_DATA)'; test -n "$(blaze_colordir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(blaze_colordir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(blaze_colordir)" && rm -f $$files
install-blubuntuDATA: $(blubuntu_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(blubuntudir)" || $(MKDIR_P) "$(DESTDIR)$(blubuntudir)"
	@list='$(blubuntu_DATA)'; test -n "$(blubuntudir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(blubuntudir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(blubuntudir)" || exit $$?; \
	done

uninstall-blubuntuDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(blubuntu_DATA)'; test -n "$(blubuntudir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(blubuntudir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(blubuntudir)" && rm -f $$files
install-defaultDATA: $(default_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(defaultdir)" || $(MKDIR_P) "$(DESTDIR)$(defaultdir)"
	@list='$(default_DATA)'; test -n "$(defaultdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(defaultdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(defaultdir)" || exit $$?; \
	done

uninstall-defaultDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(default_DATA)'; test -n "$(defaultdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(defaultdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(defaultdir)" && rm -f $$files
install-dustDATA: $(dust_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(dustdir)" || $(MKDIR_P) "$(DESTDIR)$(dustdir)"
	@list='$(dust_DATA)'; test -n "$(dustdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(dustdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(dustdir)" || exit $$?; \
	done

uninstall-dustDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dust_DATA)'; test -n "$(dustdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(dustdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(dustdir)" && rm -f $$files
install-dust_invertDATA: $(dust_invert_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(dust_invertdir)" || $(MKDIR_P) "$(DESTDIR)$(dust_invertdir)"
	@list='$(dust_invert_DATA)'; test -n "$(dust_invertdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(dust_invertdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(dust_invertdir)" || exit $$?; \
	done

uninstall-dust_invertDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dust_invert_DATA)'; test -n "$(dust_invertdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(dust_invertdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(dust_invertdir)" && rm -f $$files
install-dust_sandDATA: $(dust_sand_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(dust_sanddir)" || $(MKDIR_P) "$(DESTDIR)$(dust_sanddir)"
	@list='$(dust_sand_DATA)'; test -n "$(dust_sanddir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(dust_sanddir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(dust_sanddir)" || exit $$?; \
	done

uninstall-dust_sandDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dust_sand_DATA)'; test -n "$(dust_sanddir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(dust_sanddir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(dust_sanddir)" && rm -f $$files
install-elementaryDATA: $(elementary_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(elementarydir)" || $(MKDIR_P) "$(DESTDIR)$(elementarydir)"
	@list='$(elementary_DATA)'; test -n "$(elementarydir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(elementarydir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(elementarydir)" || exit $$?; \
	done

uninstall-elementaryDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(elementary_DATA)'; test -n "$(elementarydir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(elementarydir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(elementarydir)" && rm -f $$files
install-equinox_glassDATA: $(equinox_glass_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(equinox_glassdir)" || $(MKDIR_P) "$(DESTDIR)$(equinox_glassdir)"
	@list='$(equinox_glass_DATA)'; test -n "$(equinox_glassdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(equinox_glassdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(equinox_glassdir)" || exit $$?; \
	done

uninstall-equinox_glassDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(equinox_glass_DATA)'; test -n "$(equinox_glassdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(equinox_glassdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(equinox_glassdir)" && rm -f $$files
install-humanDATA: $(human_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(humandir)" || $(MKDIR_P) "$(DESTDIR)$(humandir)"
	@list='$(human_DATA)'; test -n "$(humandir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(humandir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(humandir)" || exit $$?; \
	done

uninstall-humanDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(human_DATA)'; test -n "$(humandir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(humandir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(humandir)" && rm -f $$files
install-human_thinDATA: $(human_thin_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(human_thindir)" || $(MKDIR_P) "$(DESTDIR)$(human_thindir)"
	@list='$(human_thin_DATA)'; test -n "$(human_thindir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(human_thindir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(human_thindir)" || exit $$?; \
	done

uninstall-human_thinDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(human_thin_DATA)'; test -n "$(human_thindir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(human_thindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(human_thindir)" && rm -f $$files
install-new_hopeDATA: $(new_hope_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(new_hopedir)" || $(MKDIR_P) "$(DESTDIR)$(new_hopedir)"
	@list='$(new_hope_DATA)'; test -n "$(new_hopedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(new_hopedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(new_hopedir)" || exit $$?; \
	done

uninstall-new_hopeDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(new_hope_DATA)'; test -n "$(new_hopedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(new_hopedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(new_hopedir)" && rm -f $$files
install-planoDATA: $(plano_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(planodir)" || $(MKDIR_P) "$(DESTDIR)$(planodir)"
	@list='$(plano_DATA)'; test -n "$(planodir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(planodir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(planodir)" || exit $$?; \
	done

uninstall-planoDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(plano_DATA)'; test -n "$(planodir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(planodir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(planodir)" && rm -f $$files
install-radianceDATA: $(radiance_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(radiancedir)" || $(MKDIR_P) "$(DESTDIR)$(radiancedir)"
	@list='$(radiance_DATA)'; test -n "$(radiancedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(radiancedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(radiancedir)" || exit $$?; \
	done

uninstall-radianceDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(radiance_DATA)'; test -n "$(radiancedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(radiancedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(radiancedir)" && rm -f $$files
install-radiance_maverickDATA: $(radiance_maverick_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(radiance_maverickdir)" || $(MKDIR_P) "$(DESTDIR)$(radiance_maverickdir)"
	@list='$(radiance_maverick_DATA)'; test -n "$(radiance_maverickdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(radiance_maverickdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(radiance_maverickdir)" || exit $$?; \
	done

uninstall-radiance_maverickDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(radiance_maverick_DATA)'; test -n "$(radiance_maverickdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(radiance_maverickdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(radiance_maverickdir)" && rm -f $$files
install-sorbetDATA: $(sorbet_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(sorbetdir)" || $(MKDIR_P) "$(DESTDIR)$(sorbetdir)"
	@list='$(sorbet_DATA)'; test -n "$(sorbetdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(sorbetdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(sorbetdir)" || exit $$?; \
	done

uninstall-sorbetDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(sorbet_DATA)'; test -n "$(sorbetdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(sorbetdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(sorbetdir)" && rm -f $$files
tags: TAGS
TAGS:

ctags: CTAGS
CTAGS:


distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(WoWdir)" "$(DESTDIR)$(ambiancedir)" "$(DESTDIR)$(ambiance_maverickdir)" "$(DESTDIR)$(ambiance_x_studiodir)" "$(DESTDIR)$(antiquedir)" "$(DESTDIR)$(blazedir)" "$(DESTDIR)$(blaze_colordir)" "$(DESTDIR)$(blubuntudir)" "$(DESTDIR)$(defaultdir)" "$(DESTDIR)$(dustdir)" "$(DESTDIR)$(dust_invertdir)" "$(DESTDIR)$(dust_sanddir)" "$(DESTDIR)$(elementarydir)" "$(DESTDIR)$(equinox_glassdir)" "$(DESTDIR)$(humandir)" "$(DESTDIR)$(human_thindir)" "$(DESTDIR)$(new_hopedir)" "$(DESTDIR)$(planodir)" "$(DESTDIR)$(radiancedir)" "$(DESTDIR)$(radiance_maverickdir)" "$(DESTDIR)$(sorbetdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-WoWDATA install-ambianceDATA \
	install-ambiance_maverickDATA install-ambiance_x_studioDATA \
	install-antiqueDATA install-blazeDATA install-blaze_colorDATA \
	install-blubuntuDATA install-defaultDATA install-dustDATA \
	install-dust_invertDATA install-dust_sandDATA \
	install-elementaryDATA install-equinox_glassDATA \
	install-humanDATA install-human_thinDATA install-new_hopeDATA \
	install-planoDATA install-radianceDATA \
	install-radiance_maverickDATA install-sorbetDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-WoWDATA uninstall-ambianceDATA \
	uninstall-ambiance_maverickDATA \
	uninstall-ambiance_x_studioDATA uninstall-antiqueDATA \
	uninstall-blazeDATA uninstall-blaze_colorDATA \
	uninstall-blubuntuDATA uninstall-defaultDATA \
	uninstall-dustDATA uninstall-dust_invertDATA \
	uninstall-dust_sandDATA uninstall-elementaryDATA \
	uninstall-equinox_glassDATA uninstall-humanDATA \
	uninstall-human_thinDATA uninstall-new_hopeDATA \
	uninstall-planoDATA uninstall-radianceDATA \
	uninstall-radiance_maverickDATA uninstall-sorbetDATA

.MAKE: install-am install-strip

.PHONY: all all-am check check-am clean clean-generic distclean \
	distclean-generic distdir dvi dvi-am html html-am info info-am \
	install install-WoWDATA install-am install-ambianceDATA \
	install-ambiance_maverickDATA install-ambiance_x_studioDATA \
	install-antiqueDATA install-blazeDATA install-blaze_colorDATA \
	install-blubuntuDATA install-data install-data-am \
	install-defaultDATA install-dustDATA install-dust_invertDATA \
	install-dust_sandDATA install-dvi install-dvi-am \
	install-elementaryDATA install-equinox_glassDATA install-exec \
	install-exec-am install-html install-html-am install-humanDATA \
	install-human_thinDATA install-info install-info-am \
	install-man install-new_hopeDATA install-pdf install-pdf-am \
	install-planoDATA install-ps install-ps-am \
	install-radianceDATA install-radiance_maverickDATA \
	install-sorbetDATA install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-generic pdf pdf-am ps ps-am uninstall \
	uninstall-WoWDATA uninstall-am uninstall-ambianceDATA \
	uninstall-ambiance_maverickDATA \
	uninstall-ambiance_x_studioDATA uninstall-antiqueDATA \
	uninstall-blazeDATA uninstall-blaze_colorDATA \
	uninstall-blubuntuDATA uninstall-defaultDATA \
	uninstall-dustDATA uninstall-dust_invertDATA \
	uninstall-dust_sandDATA uninstall-elementaryDATA \
	uninstall-equinox_glassDATA uninstall-humanDATA \
	uninstall-human_thinDATA uninstall-new_hopeDATA \
	uninstall-planoDATA uninstall-radianceDATA \
	uninstall-radiance_maverickDATA uninstall-sorbetDATA


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
